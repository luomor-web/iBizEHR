<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.ehr.core.common.mapper.ServiceRTMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="ServiceRTResultMap" databaseId="db2">
        <![CDATA[select * from v_service t1     where  serviceid=#{id}]]>
    </select>
	<select id="selectById"  resultMap="ServiceRTResultMap" databaseId="mysql">
        <![CDATA[select * from v_service t1     where  serviceid=#{id}]]>
    </select>
	<select id="selectById"  resultMap="ServiceRTResultMap" databaseId="oracle">
        <![CDATA[select * from v_service t1     where  serviceid=#{id}]]>
    </select>
	<select id="selectById"  resultMap="ServiceRTResultMap" databaseId="postgresql">
        <![CDATA[select * from v_service t1     where  serviceid=#{id}]]>
    </select>
	<select id="selectById"  resultMap="ServiceRTResultMap" databaseId="ppas">
        <![CDATA[select * from v_service t1     where  serviceid=#{id}]]>
    </select>
	<select id="selectById"  resultMap="ServiceRTResultMap" databaseId="sqlserver">
        <![CDATA[select * from v_service t1     where  serviceid=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="ServiceRTResultMap" type="cn.ibizlab.ehr.core.common.domain.ServiceRT" autoMapping="true">
        <id property="serviceid" column="serviceid" /><!--主键字段映射-->
            
		
    </resultMap>


    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.ehr.core.common.filter.ServiceRTSearchContext"  resultMap="ServiceRTResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="db2">
       <![CDATA[	SELECT t1.CONTAINER, t1.CREATEDATE, t1.CREATEMAN, t1.MEMO, t1.RESERVER, t1.RUNORDER, t1.SERVICEID, t1.SERVICENAME, t1.SERVICEOBJECT, t1.SERVICESTATE, t1.STARTMODE, t1.UPDATEDATE, t1.UPDATEMAN FROM T_SRFSERVICE t1  
			]]>
    </sql>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
       <![CDATA[	SELECT t1.`CONTAINER`, t1.`CREATEDATE`, t1.`CREATEMAN`, t1.`MEMO`, t1.`RESERVER`, t1.`RUNORDER`, t1.`SERVICEID`, t1.`SERVICENAME`, t1.`SERVICEOBJECT`, t1.`SERVICESTATE`, t1.`STARTMODE`, t1.`UPDATEDATE`, t1.`UPDATEMAN` FROM `T_SRFSERVICE` t1  
			]]>
    </sql>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="oracle">
       <![CDATA[	SELECT t1.CONTAINER, t1.CREATEDATE, t1.CREATEMAN, t1.MEMO, t1.RESERVER, t1.RUNORDER, t1.SERVICEID, t1.SERVICENAME, t1.SERVICEOBJECT, t1.SERVICESTATE, t1.STARTMODE, t1.UPDATEDATE, t1.UPDATEMAN FROM T_SRFSERVICE t1  
			]]>
    </sql>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="postgresql">
       <![CDATA[	SELECT t1.CONTAINER AS CONTAINER, t1.CREATEDATE AS CREATEDATE, t1.CREATEMAN AS CREATEMAN, t1.MEMO AS MEMO, t1.RESERVER AS RESERVER, t1.RUNORDER AS RUNORDER, t1.SERVICEID AS SERVICEID, t1.SERVICENAME AS SERVICENAME, t1.SERVICEOBJECT AS SERVICEOBJECT, t1.SERVICESTATE AS SERVICESTATE, t1.STARTMODE AS STARTMODE, t1.UPDATEDATE AS UPDATEDATE, t1.UPDATEMAN AS UPDATEMAN FROM T_SRFSERVICE t1  
			]]>
    </sql>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="ppas">
       <![CDATA[	SELECT t1.CONTAINER AS CONTAINER, t1.CREATEDATE AS CREATEDATE, t1.CREATEMAN AS CREATEMAN, t1.MEMO AS MEMO, t1.RESERVER AS RESERVER, t1.RUNORDER AS RUNORDER, t1.SERVICEID AS SERVICEID, t1.SERVICENAME AS SERVICENAME, t1.SERVICEOBJECT AS SERVICEOBJECT, t1.SERVICESTATE AS SERVICESTATE, t1.STARTMODE AS STARTMODE, t1.UPDATEDATE AS UPDATEDATE, t1.UPDATEMAN AS UPDATEMAN FROM T_SRFSERVICE t1  
			]]>
    </sql>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="sqlserver">
       <![CDATA[	SELECT t1.[CONTAINER], t1.[CREATEDATE], t1.[CREATEMAN], t1.[MEMO], t1.[RESERVER], t1.[RUNORDER], t1.[SERVICEID], t1.[SERVICENAME], t1.[SERVICEOBJECT], t1.[SERVICESTATE], t1.[STARTMODE], t1.[UPDATEDATE], t1.[UPDATEMAN] FROM [T_SRFSERVICE] t1  
			]]>
    </sql>

</mapper>

